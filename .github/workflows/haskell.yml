# NOTE: This should be a good reference for github actions w.r.t haskell
# https://markkarpov.com/post/github-actions-for-haskell-ci.html

name: kriti-lang::CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mrkkrp/ormolu-action@v4
        with:
          respect-cabal-files: false

  build-test:
    runs-on: ubuntu-latest
    
#   NOTE: once the library is ready to be released into the wild
#   we could use this code block to run the tests and build the exe.
#   on multiple GHC versions and perhaps even multiple cabal versions
    strategy:
      matrix:
        cabal: ["3.6.2"]
        ghc: ["8.10.7", "9.0.2", "9.2.4"]

    env:
      CONFIG: "--project-file=ci/${{ matrix.ghc }}.project"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3.0.2

      - name: "Setup"
        uses: haskell/actions/setup@v2.0.1
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: "Install Happy/Alex"
        run: sudo apt-get install happy alex

      - name: "Cache"
        uses: actions/cache@v3.0.8
        env:
          cache-name: cache-cabal
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: "Build"
        run: cabal build $CONFIG

      - name: "Test"
        run: cabal test $CONFIG

# NOTE: keeping these here for future versions
#       - run: cabal haddock $CONFIG
#       - run: cabal sdist
